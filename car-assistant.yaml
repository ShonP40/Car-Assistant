substitutions:
  name: "car-assistant"
  friendly_name: "Car Assistant"
  id: "car_assistant"
  project_name: "ShonP40.Car-Assistant"
  project_version: "1.0"

esphome:
  name: "${name}"
  friendly_name: ${friendly_name}
  project:
    name: "${project_name}"
    version: "${project_version}"

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    sdkconfig_options:
      # To gain more speed, or if big transferts fails
      # not done by default because it conflicts with the uart component (crash)
      CONFIG_UART_ISR_IN_IRAM: y
      # Some command may block for a long delay if the modem is not reachable, and cause a watchdog timeout
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "60"
      # With CMUX, do not reconstruct the entire payload in the DTE buffer.
      # Try it if you get "CMUX: Failed to defragment longer payload" warnings message
      # You can also this a bigger "buffer_size_dte"
      CONFIG_ESP_MODEM_CMUX_DEFRAGMENT_PAYLOAD: n
      CONFIG_ESP_MODEM_USE_INFLATABLE_BUFFER_IF_NEEDED: y
      CONFIG_ESP_MODEM_CMUX_USE_SHORT_PAYLOADS_ONLY: n
      # Enable support for long file names
      CONFIG_FATFS_LFN_STACK: y
  cpu_frequency: 240MHz

psram:
  mode: quad
  speed: 120MHz

external_components:
  - source: github://pr#6721 # Docs: https://deploy-preview-4056--esphome.netlify.app/components/modem.html
    components: [ network, modem, watchdog ]
    refresh: 10min
  - source: github://pr#7147
    components: [ wifi ]
    refresh: 10min
  - source: github://n-serrette/esphome_sd_card
    components: [sd_mmc_card, sd_file_server]
    refresh: 10min

modem:
  id: atmodem
  rx_pin: GPIO26
  tx_pin: GPIO27
  baud_rate: 115200
  power_pin:
    number: GPIO04
    inverted: true
  model: SIM7600
  apn: !secret cellular_apn
  pin_code: !secret cellular_pin_code
  enable_on_boot: true
  enable_cmux: true
  reboot_timeout: 5min
  init_at:
    - AT+CGMM  # model
  on_not_responding:
    logger.log: "modem not responding"
  on_connect:
    logger.log: "modem connected"
  on_disconnect:
    logger.log: "modem disconnected"
  nmea:
    id: nmea_data

gps:
  uart_id: nmea_data
  latitude:
    name: "${friendly_name} Latitude"
  longitude:
    name: "${friendly_name} Longitude"
  altitude:
    name: "${friendly_name} Altitude"
  speed:
    name: "${friendly_name} Speed"
  course:
    name: "${friendly_name} Course"
  satellites:
    name: "${friendly_name} Satellites"
  hdop:
    name: "${friendly_name} Horizontal Dilution Of Precision"

sd_mmc_card:
  mode_1bit: true
  clk_pin: GPIO14
  cmd_pin: GPIO15
  data0_pin: GPIO2
  data3_pin: GPIO13

wifi:
  # WiFi Hotspot with internet access
  ap:
    ssid: ${friendly_name}
    password: !secret wifi_password
  use_address: 172.16.0.4

# Enable logging
logger:
debug:

ota:
  - platform: esphome
    password: !secret ota_password

web_server:
  port: 80
  version: 3
  auth:
    username: root
    password: !secret wifi_password

sd_file_server:
  url_prefix: file
  root_path: "/"
  enable_deletion: true
  enable_download: true
  enable_upload: true

time:
  - platform: sntp
    timezone: Etc/UTC
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org

wireguard:
  address: 172.16.0.4
  private_key: !secret wireguard_private_key
  peer_endpoint: !secret wireguard_address
  peer_public_key: !secret wireguard_public_key
  netmask: !secret wireguard_netmask
  peer_port: !secret wireguard_peer_port
  peer_allowed_ips:
    - 0.0.0.0/0
  peer_persistent_keepalive: 25s

# Enable Home Assistant API
api:
  encryption:
    key: <redacted>

i2c:
  sda: GPIO21
  scl: GPIO22

text_sensor:
  - platform: debug
    device:
      name: "${friendly_name} Device Info"
    reset_reason:
      name: "${friendly_name} Reset Reason"
  - platform: modem
    network_type:
      name: "${friendly_name} Network Type"
    signal_strength:
      name: "${friendly_name} Signal Strength"
  - platform: template
    name: "${friendly_name} Charging Status"
    lambda: |-
      if (id(${id}_solar_indicator).state != 0) {
        return {"GPIO/Solar Charging"};
      } else if (id(${id}_battery_voltage).state == 0) {
        return {"USB Charging"};
      } else {
        return {"Discharging"};
      }
  - platform: wireguard
    address:
      name: "${friendly_name} WireGuard Address"

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime Sensor"
  - platform: internal_temperature
    name: "Internal Temperature"
  - platform: debug
    free:
      name: "${friendly_name} Heap Free"
    block:
      name: "${friendly_name} Heap Max Block"
    loop_time:
      name: "${friendly_name} Loop Time"
    psram:
      name: "${friendly_name} Free PSRAM"
    cpu_frequency:
      name: "${friendly_name} CPU Frequency"
  - platform: modem
    rssi:
      name: "${friendly_name} RSSI"
    ber:
      name: "${friendly_name} Bit Error Rate"
  - platform: adc
    pin: GPIO35
    name: "${friendly_name} Battery Voltage"
    id: ${id}_battery_voltage
    attenuation: 11db
    filters:
      - lambda: |-
          float mapped = (x / 2700.0) * 4200.0;
          return mapped / 1000.0;
    unit_of_measurement: "V"
    accuracy_decimals: 2
  - platform: template
    name: "${friendly_name} Battery Percentage"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    lambda: |-
      const float battery_min = 2.7;
      const float battery_max = 4.2;
      float voltage = id(${id}_battery_voltage).state;
      if (voltage < battery_min) {
        return 0;
      } else {
        float percentage = ((voltage - battery_min) / (battery_max - battery_min)) * 100;
        return (percentage > 100) ? 100 : percentage;
      }
  - platform: adc
    pin: GPIO36
    id: ${id}_solar_indicator
    internal: true
  - platform: wireguard
    latest_handshake:
      name: "${friendly_name} WireGuard Latest Handshake"
  - platform: bme280_i2c
    temperature:
      name: "${friendly_name} Temperature Sensor"
      id: "${id}_temperature_sensor"
      oversampling: 1x
    pressure:
      name: "${friendly_name} Pressure Sensor"
      oversampling: 1x
    humidity:
      name: "${friendly_name} Humidity Sensor"
      oversampling: 1x
    address: 0x76
    update_interval: 60s
  - platform: tsl2561
    name: "${friendly_name} Light Level"
    address: 0x39
    update_interval: 15s
    gain: 16x
    is_cs_package: true

button:
  - platform: restart
    id: restart_button
    name: "${friendly_name} Restart"

binary_sensor:
  - platform: status
    name: "${friendly_name} Status"
  - platform: gpio
    name: "${friendly_name} Modem Status"
    pin: GPIO34
  - platform: gpio
    pin: GPIO19
    name: "${friendly_name} Motion Sensor"
    device_class: motion

status_led:
  pin:
    number: GPIO12
    inverted: true

switch:
  - platform: gpio
    id: flight_mode
    name: "${friendly_name} Flight Mode"
    restore_mode: ALWAYS_ON
    pin:
      number: GPIO25
      inverted: true
  - platform: modem
    gnss:
      name: "${friendly_name} GNSS"
      restore_mode: ALWAYS_ON

esp32_ble_beacon:
  type: iBeacon
  uuid: '5c4e7466-7808-2bc7-f135-f652cadb6fe2'